import sys
from setuptools import setup, find_packages
from setuptools.command.install import install

class CustomInstallCommand(install):
    """Customized setuptools install command to warn about virtual environments."""

    def run(self):
        # Check if the script is running inside a virtual environment
        if not (hasattr(sys, 'real_prefix') or 
                (hasattr(sys, 'base_prefix') and sys.base_prefix != sys.prefix)):
            print(
                "\nWARNING: It is highly recommended to install this package within a virtual environment "
                "to avoid dependency conflicts.\n"
                "You can create one using:\n"
                "    python -m venv env\n"
                "And activate it using:\n"
                "    # On Windows\n"
                "    env\\Scripts\\activate\n"
                "    # On Unix or MacOS\n"
                "    source env/bin/activate\n\n"
            )
        # Proceed with the standard installation
        install.run(self)

setup(
    name='eclare',
    version='0.1.0',
    url='https://github.com/li-lab-mcgill/ECLARE',
    package_dir={'': 'src'},
    packages=find_packages(where='src'),
    install_requires=[
        "absl-py==2.0.0",
        "alabaster==0.7.16",
        "alembic==1.12.1",
        "anndata==0.10.3",
        "array_api_compat==1.4",
        "asttokens==2.4.1",
        "attrs==23.1.0",
        "Babel==2.13.1",
        "backcall==0.2.0",
        "beautifulsoup4==4.12.2",
        "biopython==1.81",
        "bleach==6.1.0",
        "Brotli",  # No version specified; installs latest
        "cached-property",  # No version specified; installs latest
        "cattrs==23.2.3",
        "celltypist==1.6.3",
        "certifi==2023.11.17",
        "cffi==1.15.1",
        "charset-normalizer==3.3.2",
        "chex==0.1.7",
        "click==8.1.8",
        "colorama",  # No version specified; installs latest
        "colorlog==5.0.1",
        "comm==0.2.0",
        "contourpy==1.1.1",
        "cycler==0.12.1",
        "Cython==3.0.5",
        "debugpy==1.8.0",
        "decorator==5.1.1",
        "docutils==0.20.1",
        "equinox==0.11.10",
        "et_xmlfile==2.0.0",
        "etils==1.5.2",
        "exceptiongroup==1.2.0",
        "executing==2.0.1",
        "filelock==3.13.1",
        "fonttools==4.45.1",
        "future==1.0.0",
        "get-annotations==0.1.2",
        "gmpy2",  # No version specified; installs latest
        "greenlet==2.0.2",
        "h5py==3.8.0",
        "idna==3.5",
        "igraph==0.10.8",
        "importlib_metadata==6.8.0",
        "importlib_resources==6.1.1",
        "ipykernel==6.26.0",
        "ipython==8.12.3",
        "jax==0.4.13",
        "jaxlib==0.4.13",
        "jaxopt==0.8.3",
        "jaxtyping==0.2.36",
        "jedi==0.19.1",
        "Jinja2==3.1.2",
        "joblib==1.3.2",
        "jupyter_client==8.6.0",
        "jupyter_core==5.5.0",
        "kiwisolver==1.4.5",
        "legacy-api-wrap==1.4.1",
        "leidenalg==0.10.1",
        "lineax==0.0.1",
        "llvmlite==0.41.1",
        "louvain==0.8.0",
        "Mako==1.3.0",
        "markdown-it-py==3.0.0",
        "MarkupSafe==2.1.3",
        "matplotlib==3.9.2",
        "matplotlib-inline==0.1.6",
        "mdurl==0.1.2",
        "ml_dtypes==0.5.1",
        "mpmath==1.3.0",
        "mudata==0.2.3",
        "munkres==1.1.4",
        "muon==0.1.5",
        "natsort==8.4.0",
        "nest-asyncio==1.5.8",
        "networkx==3.2.1",
        "numba==0.58.0",
        "numpy==1.25.2",
        "openpyxl==3.1.5",
        "opt_einsum==3.4.0",
        "optax==0.1.7",
        "optuna==3.4.0",
        "ott-jax==0.4.5",
        "packaging==23.2",
        "pandas==2.0.3",
        "parso==0.8.3",
        "patsy==0.5.3",
        "pexpect==4.8.0",
        "pickleshare==0.7.5",
        "pillow==10.1.0",
        "platformdirs==4.0.0",
        "plottable==0.1.5",
        "POT==0.9.3",
        "prompt-toolkit==3.0.41",
        "protobuf==4.25.3",
        "psutil==5.9.5",
        "ptyprocess==0.7.0",
        "pure-eval==0.2.2",
        "pybedtools==0.9.0",
        "pybiomart==0.2.0",
        "pycparser==2.21",
        "Pygments==2.17.2",
        "pynndescent==0.5.11",
        "pyparsing==3.0.9",
        "pysam==0.22.1",
        "PySide6==6.8.1",
        "PySocks",  # No version specified; installs latest
        "python-dateutil==2.8.2",
        "pytz==2023.3.post1",
        "PyYAML==6.0.1",
        "pyzmq==25.1.1",
        "requests==2.31.0",
        "requests-cache==1.2.1",
        "rich==13.9.4",
        "scanpy==1.9.6",
        "scib-metrics==0.4.1",
        "scikit-learn==1.3.0",
        "scipy==1.11.4",
        "seaborn==0.12.2",
        "session-info==1.0.0",
        "shiboken6==6.8.1",
        "six==1.16.0",
        "soupsieve==2.5",
        "SQLAlchemy==2.0.23",
        "stack-data==0.6.3",
        "statsmodels==0.14.0",
        "stdlib-list==0.10.0",
        "sympy==1.12",
        "tabulate==0.9.0",
        "texttable==1.7.0",
        "threadpoolctl==3.2.0",
        "toolz==1.0.0",
        "torch==2.0.1",
        #"torchaudio==2.0.1",
        "torchvision==0.15.1",
        "tornado==6.3.3",
        "tqdm==4.66.1",
        "traitlets==5.13.0",
        #"triton==2.0.0",
        "typing_extensions==4.8.0",
        "tzdata==2023.3",
        "tzlocal==5.2",
        "umap-learn==0.5.3",
        "unicodedata2",  # No version specified; installs latest
        "url-normalize==1.4.3",
        "urllib3==2.1.0",
        "wcwidth==0.2.12",
        "webencodings==0.5.1",
        "wrapt==1.16.0",
        "xlrd==1.2.0",
        "zipp==3.17.0",
    ],
    include_package_data=True,
    entry_points={
        'console_scripts': [
            # If you want to create command-line scripts, specify them here
            # 'command_name=module:function',
        ],
    },
    author='Dylan Mann-Krzisnik',
    author_email='dylan.mann-krzisnik@mail.mcgill.ca',
    description='ECLARE: Enesemble knowledge distillation for Contrastive Learning of ATAC and RNA Embeddings',
    cmdclass={
        'install': CustomInstallCommand,
    },
    classifiers=[
        'Programming Language :: Python :: 3',
        'License :: OSI Approved :: MIT License',
        'Operating System :: OS Independent',
    ],
    python_requires='>=3.9',  # specify your Python version requirement
)